import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from  sklearn.linear_model import LogisticRegression
from sklearn.metrics import r2_score
from sklearn.metrics import accuracy_score

#设置超过一千列再换行
pd.set_option('display.width',1000)
#设置汉字显示正常
plt.rcParams['font.sans-serif'] = ['SimHei']
#设置显示所有列
pd.set_option('display.max_columns', None)
#解决负号问题
plt.rcParams['axes.unicode_minus']=False

# 数据说明
# id 编号
# age 年龄
# sex 性别
# dataset 数据收集地点
# cp  胸痛类型(4种)
# trestbps 静息血压
# chol 血清胆固醇
# fbs 空腹血糖是否>120mg/dl
# restecg 静息心电图(3种)
# thalach 达到的最大心率
# exang 运动是否诱发心绞痛
# oldpeak 相对于休息的运动引起的ST值(ST值与心电图上的位置有关)
# slope 运动高峰ST段的坡度(3种)
# ca  主要血管数量 (0-3)
# thal 一种叫做地中海贫血的血液疾病(3种)
# target 心脏病的阶段

def data1():
    heart_disease=pd.read_csv(r'D:\360MoveData\Users\LENOVO\Desktop\数据集\heart_disease_uci.csv')
    # print(heart_disease.head())
    # print(heart_disease.info())
    # print(heart_disease.describe())
    # #查看得病情况
    # sns.countplot(x='target',data=heart_disease)
    # plt.xlabel('得病(1)/未得病(0)')
    # plt.show()
    # #查看性别情况
    # sns.countplot(x='sex',data=heart_disease)
    # plt.xlabel('男(1)/女(0)')
    # plt.show()
    # #查看得病与年龄的关系
    # sns.countplot(x='age',data=heart_disease,hue='target')
    # plt.show()
    # #查看得病与性别的关系
    # sns.countplot(x='sex',data=heart_disease,hue='target')
    # plt.xlabel('男(1)/女(0)')
    # plt.show()
    #数据处理
    index_X=heart_disease.columns[0:-1]#提取除了target的其他列
    X=heart_disease[index_X]
    Y=heart_disease['target']
    X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3)
    #数据标准化
    stand=StandardScaler().fit(X_train)
    X_train=stand.transform(X_train)
    X_test=stand.transform(X_test)
    #分类算法(LogisticRegression逻辑回归)
    logr=LogisticRegression()
    logr.fit(X_train,Y_train)
    print('拟合效果：',logr.score(X_train,Y_train))
    Y_pred=logr.predict(X_test)
    print('分类预测效果：',accuracy_score(Y_test,Y_pred))

def data2():
    heart_disease=pd.read_csv(r'D:\360MoveData\Users\LENOVO\Desktop\数据集\heart_disease_uci_1.csv')
    print(heart_disease.head())
    print(heart_disease.info())


if __name__ == '__main__':
    # data1()
    data2()
